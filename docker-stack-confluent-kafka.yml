version: '3.3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka_broker:
    image: confluentinc/cp-enterprise-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_CREATE_TOPICS: 'ThingspaceSDK/12344444444444555/UNITOnBoard:1:1'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka_broker:9092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
  publisher:
    image: ssriram1978/publisher:latest
    depends_on:
      - redis-commander
      - kafka_broker
    deploy:
      replicas: 1
      #      resources:
      #        limits:
      #          cpus: "0.8"
      #          memory: 2000M
      restart_policy:
        condition: none
    environment:
      broker_hostname_key: 'kafka_broker'
      broker_port_key: "1883"
      topic_key: "ThingspaceSDK/12344444444444555/UNITOnBoard"
      message_key: "{\
                     \"lastUpdated\": \"2018-11-19T18:21:03Z\",\
                     \"unitName\": \"VZW_LH_UNIT_01\",\
                     \"unitMacId\": \"864508030027459\",\
                     \"sensor\": {\
                       \"name\": \"cHe_AssetTracker\",\
                       \"characteristics\": [\
                         {\
                           \"characteristicsName\": \"temperature\",\
                           \"currentValue\": \"30.2999\",\
                           \"readLevel\": \"R\",\
                           \"parameterType\": \"Number\",\
                           \"measurementUnit\": \"Celcius\"\
                         }\
                       ]\
                     }\
                   }"
      messages_per_second_key: "100"
      test_duration_in_sec_key: "100"
      log_level_key: "info"
      redis_server_hostname_key: 'redis'
      redis_server_port_key:  '6379'
      redis_log_keyname_key: 'produce_load_test_events'
      total_job_enqueued_count_redis_name_key: 'total_produced_count'
      total_job_dequeued_count_redis_name_key: 'total_consumed_count'
      type_of_messaging_queue_key: 'ConfluentKafka'
  subscriber:
    image: ssriram1978/subscriber:latest
    depends_on:
      - redis-commander
      - kafka_broker
    deploy:
      replicas: 1
      #      resources:
      #        limits:
      #          cpus: "0.8"
      #          memory: 2000M
      restart_policy:
        condition: none
    environment:
      broker_hostname_key: "kafka_broker"
      broker_port_key: "1883"
      topic_key: "ThingspaceSDK/12344444444444555/UNITOnBoard"
      average_latency_for_n_sec_key: "1"
      test_duration_in_sec_key: "100"
      log_level_key: "info"
      max_consumer_threads_key: "1"
      redis_server_hostname_key: 'redis'
      redis_server_port_key:  '6379'
      redis_log_keyname_key: 'consume_load_test_events'
      latency_publish_key: 'latency_results'
      total_job_enqueued_count_redis_name_key: 'total_produced_count'
      total_job_dequeued_count_redis_name_key: 'total_consumed_count'
      latency_compute_start_key_name_key: 'latency_compute_start_key_name'
      type_of_messaging_queue_key: 'ConfluentKafka'
  plotter:
    image: ssriram1978/plotter:latest
    depends_on:
      - redis-commander
    deploy:
      replicas: 1
      #      resources:
      #        limits:
      #          cpus: "0.8"
      #          memory: 2000M
      restart_policy:
        condition: none
    environment:
      redis_server_hostname_key: 'redis'
      redis_server_port_key:  '6379'
      redis_log_keyname_key: 'plotter_load_test_events'
      latency_redis_key: 'ThingspaceSDK/12344444444444555/UNITOnBoard_latency_results'
      latency_compute_start_key_name_key: 'latency_compute_start_key_name'
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=redis:redis:6379
    ports:
      - 9010:8081
  portainer:
    image: portainer/portainer
    ports:
      - "9000:9000"
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./infrastructure_components/portainer/data:/data
  filebeat:
    image: docker.elastic.co/beats/filebeat:6.5.4
    user: root
    depends_on:
      - elasticsearch
      - logstash
      - kibana
    volumes:
      - ./plotter/filebeat/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - output.elasticsearch.hosts=["elasticsearch:9200"]
      - strict.perms=false
  logstash:
    image: ssriram1978/logstash:latest
    ports:
      - "5044:5044"
      - "9600:9600"
    depends_on:
      - elasticsearch
      - kibana
  kibana:
    image: docker.elastic.co/kibana/kibana-oss:6.7.1
    depends_on:
      - elasticsearch
    ports:
      - '5601:5601'
    configs:
      - source: kibana_config
        target: /usr/share/kibana/config/kibana.yml

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.7.1
    ports:
      - "9200:9200"
      - "9300:9300"
    configs:
      - source: elastic_config
        target: /usr/share/elasticsearch/config/elasticsearch.yml

configs:
  elastic_config:
    file: ./plotter/elasticsearch/config/elasticsearch.yml
  logstash_config:
    file: ./plotter/logstash/config/logstash.yml
  logstash_pipeline:
    file: ./plotter/logstash/pipeline/logstash.conf
  kibana_config:
    file: ./plotter/kibana/config/kibana.yml
  filebeat_config:
    file: ./plotter/filebeat/filebeat.docker.yml
