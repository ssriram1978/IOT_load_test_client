version: '3.2'
services:
  rabbitmq:
    image: rabbitmq:3.8-rc-management
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    ports:
      - "15672:15672"
      - "5672:5672"
      - "1889:1883"
    volumes:
      - "./infrastructure_components/publisher_subscriber/rabbit_msgq_api/rabbitmq_conf_plugins/enabled_plugins:/etc/rabbitmq/enabled_plugins"
      - "./infrastructure_components/publisher_subscriber/rabbit_msgq_api/rabbitmq_conf_plugins/rabbitmq-env.conf:/etc/rabbitmq/rabbitmq-env.conf"
      - "./infrastructure_components/publisher_subscriber/rabbit_msgq_api/rabbitmq_conf_plugins/rabbitmq-modified.conf:/etc/rabbitmq/rabbitmq-modified.conf"
      - "./infrastructure_components/publisher_subscriber/rabbit_msgq_api/rabbitmq_conf_plugins/rabbitmq-definitions.json:/etc/rabbitmq/rabbitmq-definitions.json"
  publisher:
    image: ssriram1978/publisher:latest
    depends_on:
      - redis-commander
      - rabbitmq
    deploy:
      replicas: 1
      #      resources:
      #        limits:
      #          cpus: "0.8"
      #          memory: 2000M
      restart_policy:
        condition: on-failure
    environment:
      broker_hostname_key: "68.128.155.54"
      broker_port_key: "1889"
      topic_key: "ThingspaceSDK/12344444444444555/UNITOnBoard"
      message_key: "{\
                     \"lastUpdated\": \"2018-11-19T18:21:03Z\",\
                     \"unitName\": \"VZW_LH_UNIT_01\",\
                     \"unitMacId\": \"864508030027459\",\
                     \"sensor\": {\
                       \"name\": \"cHe_AssetTracker\",\
                       \"characteristics\": [\
                         {\
                           \"characteristicsName\": \"temperature\",\
                           \"currentValue\": \"30.2999\",\
                           \"readLevel\": \"R\",\
                           \"parameterType\": \"Number\",\
                           \"measurementUnit\": \"Celcius\"\
                         }\
                       ]\
                     }\
                   }"
      messages_per_second_key: "100"
      test_duration_in_sec_key: "100"
      log_level_key: "info"
      redis_server_hostname_key: 'redis'
      redis_server_port_key:  '6379'
      redis_log_keyname_key: 'produce_load_test_events'
      total_job_enqueued_count_redis_name_key: 'total_produced_count'
      total_job_dequeued_count_redis_name_key: 'total_consumed_count'
      type_of_messaging_queue_key: 'RabbitMQ'
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
  subscriber:
    image: ssriram1978/subscriber:latest
    depends_on:
      - redis-commander
      - rabbitmq
    deploy:
      replicas: 1
      #      resources:
      #        limits:
      #          cpus: "0.8"
      #          memory: 2000M
      restart_policy:
        condition: on-failure
    environment:
      broker_hostname_key: "68.128.155.54"
      broker_port_key: "1889"
      topic_key: "ThingspaceSDK/12344444444444555/UNITOnBoard"
      average_latency_for_n_sec_key: "1"
      test_duration_in_sec_key: "100"
      log_level_key: "info"
      max_consumer_threads_key: "1"
      redis_server_hostname_key: 'redis'
      redis_server_port_key:  '6379'
      redis_log_keyname_key: 'consume_load_test_events'
      latency_publish_key: 'latency_results'
      total_job_enqueued_count_redis_name_key: 'total_produced_count'
      total_job_dequeued_count_redis_name_key: 'total_consumed_count'
      type_of_messaging_queue_key: 'RabbitMQ'
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=redis:redis:6379
    ports:
      - 9010:8081
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
  portainer:
    image: portainer/portainer
    ports:
      - "9000:9000"
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/mec-poc/portainer_data:/data
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    depends_on:
      - cadvisor
    networks:
      - monitor-net
    deploy:
      placement:
        constraints:
          - node.role==manager

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - monitor-net
    deploy:
      mode: global

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - "./plotter/prometheus/alertmanager/:/etc/alertmanager/"
    networks:
      - monitor-net
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    deploy:
      placement:
        constraints:
           - node.role==manager

  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    networks:
      - monitor-net
    deploy:
      mode: global

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./plotter/prometheus/grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./plotter/prometheus/grafana/config.monitoring
    networks:
      - monitor-net
volumes:
    prometheus_data: {}
    grafana_data: {}

networks:
  monitor-net: