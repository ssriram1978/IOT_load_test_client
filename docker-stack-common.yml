version: '3.7'
services:
    portainer:
      image: portainer/portainer
      ports:
        - "9000:9000"
      command: -H unix:///var/run/docker.sock
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - ./infrastructure_components/portainer/data:/data
        - "/etc/timezone:/etc/timezone:ro"
        - "/etc/localtime:/etc/localtime:ro"
    #  logspout:
    #    image: gliderlabs/logspout:latest
    #    command: 'syslog://:5000'
    #    depends_on:
    #      - logstash
    #    volumes:
    #      - '/var/run/docker.sock:/var/run/docker.sock'
    filebeat:
      image: docker.elastic.co/beats/filebeat:6.5.4
      user: root
      depends_on:
        - elasticsearch
        - logstash
        - kibana
      volumes:
        - ./plotter/filebeat/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro
        - /var/lib/docker/containers:/var/lib/docker/containers:ro
        - /var/run/docker.sock:/var/run/docker.sock:ro
      environment:
        - output.elasticsearch.hosts=["elasticsearch:9200"]
        - strict.perms=false
    logstash:
      build:
        context: ./plotter/logstash
        dockerfile: Dockerfile
      image: logstash:latest
      ports:
        - "5044:5044"
        - "9600:9600"
      depends_on:
        - elasticsearch
        - kibana
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - "/etc/timezone:/etc/timezone:ro"
        - "/etc/localtime:/etc/localtime:ro"
    kibana:
      image: docker.elastic.co/kibana/kibana-oss:6.7.1
      depends_on:
        - elasticsearch
      ports:
        - '5601:5601'
      configs:
        - source: kibana_config
          target: /usr/share/kibana/config/kibana.yml
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - "/etc/timezone:/etc/timezone:ro"
        - "/etc/localtime:/etc/localtime:ro"
    elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.7.1
      ports:
        - "9200:9200"
        - "9300:9300"
      configs:
        - source: elastic_config
          target: /usr/share/elasticsearch/config/elasticsearch.yml
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - "/etc/timezone:/etc/timezone:ro"
        - "/etc/localtime:/etc/localtime:ro"
    redis:
      image: redis:latest
      ports:
        - "6379:6379"
    redis-commander:
      image: rediscommander/redis-commander:latest
      environment:
        - REDIS_HOSTS=redis:redis:6379
      ports:
        - 8082:8081
    orchestrator:
      image: orchestrator:latest
      depends_on:
        - redis-commander
      deploy:
        replicas: 1
        #      resources:
        #        limits:
        #          cpus: "0.8"
        #          memory: 2000M
        restart_policy:
          condition: none
      environment:
        redis_server_hostname_key: 'redis'
        redis_server_port_key:  '6379'
        redis_log_keyname_key: 'orchestrator_load_test_events'
        # distribute_ports: 'true'
        # is_loopback_key: 'true'
        publisher_key_name: "publisher"
        publisher_hash_table_name: "publisher_hash_table"
        subscriber_key_name: "subscriber"
        subscriber_hash_table_name: "subscriber_hash_table"
        transformer_key_name: "transformer"
        transformer_hash_table_name: "transformer_hash_table"
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - "/etc/timezone:/etc/timezone:ro"
        - "/etc/localtime:/etc/localtime:ro"
    plotter:
      image: plotter:latest
      depends_on:
        - redis-commander
      deploy:
        replicas: 1
        #      resources:
        #        limits:
        #          cpus: "0.8"
        #          memory: 2000M
        restart_policy:
          condition: none
      environment:
        html_filename_key: '/opt/html_graph_storage/latency.html'
        redis_server_hostname_key: 'redis'
        redis_server_port_key:  '6379'
        redis_log_keyname_key: 'plotter_load_test_events'
        latency_redis_key: 'latency_results'
        latency_compute_start_key_name_key: 'start_time'
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - "/etc/timezone:/etc/timezone:ro"
        - "/etc/localtime:/etc/localtime:ro"
    displayer:
      image: displayer:latest
      ports:
        - "8888:8888"
      deploy:
        replicas: 1
        #      resources:
        #        limits:
        #          cpus: "0.8"
        #          memory: 2000M
        restart_policy:
          condition: none
      environment:
        html_filename_key: '/opt/html_graph_storage/latency.html'
      volumes:
        - ./html_graph_storage:/opt/html_graph_storage:ro
        - /var/run/docker.sock:/var/run/docker.sock
        - "/etc/timezone:/etc/timezone:ro"
        - "/etc/localtime:/etc/localtime:ro"
configs:
    elastic_config:
      file: ./plotter/elasticsearch/config/elasticsearch.yml
    logstash_config:
      file: ./plotter/logstash/config/logstash.yml
    logstash_pipeline:
      file: ./plotter/logstash/pipeline/logstash.conf
    kibana_config:
      file: ./plotter/kibana/config/kibana.yml
    filebeat_config:
      file: ./plotter/filebeat/filebeat.docker.yml
