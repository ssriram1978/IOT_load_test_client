version: '3.3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
    - "2181:2181"
    volumes:
    - "/etc/timezone:/etc/timezone:ro"
    - "/etc/localtime:/etc/localtime:ro"
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - target: 9094
        published: 9094
        protocol: tcp
        mode: host
    environment:
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: "ThingspaceSDK:10:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    depends_on:
      - zookeeper
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=redis:redis:6379
    ports:
      - 8082:8081
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
  publisher:
    image: publisher:latest
    depends_on:
      - redis-commander
      - rabbitmq
    deploy:
      replicas: 1
      #      resources:
      #        limits:
      #          cpus: "0.8"
      #          memory: 2000M
      restart_policy:
        condition: none
    environment:
      broker_hostname_key: 'kafka'
      broker_port_key: "9094"
      topic_key: "ThingspaceSDK/12344444444444555/UNITOnBoard"
      message_key: "{\
                     \"lastUpdated\": \"2018-11-19T18:21:03Z\",\
                     \"unitName\": \"VZW_LH_UNIT_01\",\
                     \"unitMacId\": \"864508030027459\",\
                     \"sensor\": {\
                       \"name\": \"cHe_AssetTracker\",\
                       \"characteristics\": [\
                         {\
                           \"characteristicsName\": \"temperature\",\
                           \"currentValue\": \"30.2999\",\
                           \"readLevel\": \"R\",\
                           \"parameterType\": \"Number\",\
                           \"measurementUnit\": \"Celcius\"\
                         }\
                       ]\
                     }\
                   }"
      messages_per_second_key: "100"
      test_duration_in_sec_key: "100"
      log_level_key: "info"
      redis_server_hostname_key: 'redis'
      redis_server_port_key:  '6379'
      redis_log_keyname_key: 'produce_load_test_events'
      total_job_enqueued_count_redis_name_key: 'total_produced_count'
      total_job_dequeued_count_redis_name_key: 'total_consumed_count'
      type_of_messaging_queue_key: 'WurstMeisterKafka'
  subscriber:
    image: subscriber:latest
    depends_on:
      - redis-commander
      - rabbitmq
    deploy:
      replicas: 1
      #      resources:
      #        limits:
      #          cpus: "0.8"
      #          memory: 2000M
      restart_policy:
        condition: none
    environment:
      broker_hostname_key: "kafka"
      broker_port_key: "9094"
      topic_key: "ThingspaceSDK/12344444444444555/UNITOnBoard"
      average_latency_for_n_sec_key: "1"
      test_duration_in_sec_key: "100"
      log_level_key: "info"
      max_consumer_threads_key: "1"
      redis_server_hostname_key: 'redis'
      redis_server_port_key:  '6379'
      redis_log_keyname_key: 'consume_load_test_events'
      latency_publish_key: 'latency_results'
      total_job_enqueued_count_redis_name_key: 'total_produced_count'
      total_job_dequeued_count_redis_name_key: 'total_consumed_count'
      latency_compute_start_key_name_key: 'latency_compute_start_key_name'
      type_of_messaging_queue_key: 'WurstMeisterKafka'
  plotter:
    image: plotter:latest
    depends_on:
      - redis-commander
    deploy:
      replicas: 1
      #      resources:
      #        limits:
      #          cpus: "0.8"
      #          memory: 2000M
      restart_policy:
        condition: none
    environment:
      redis_server_hostname_key: 'redis'
      redis_server_port_key:  '6379'
      redis_log_keyname_key: 'plotter_load_test_events'
      latency_redis_key: 'ThingspaceSDK/12344444444444555/UNITOnBoard_latency_results'
      latency_compute_start_key_name_key: 'latency_compute_start_key_name'
